dyn.load("mat_mul_for.so")
ra <- 2
ca <- 4
rb <- 4
cb <- 3
A <- matrix(rep(NA, ra*ca), nrow = ra)
B <- matrix(rep(NA, rb*cb), nrow = rb)
k <- 1
for (i in 1:ra) {
for (j in 1:ca) {
A[i, j] <- k
k <- k + 1
}
}
A
for (i in 1:rb) {
for (j in 1:cb) {
B[i, j] <- (i-1)*cb+j
}
}
B
result <- .Fortran("mat_mul_for",
as.double(A),
as.double(B),
as.double(ra*cb),
as.integer(ra),
as.integer(ca),
as.integer(rb),
as.integer(cb),
as.integer(ra),
as.integer(cb)
)
result
dyn.load("mat_mul_for.so")
ra <- 2
ca <- 4
rb <- 4
cb <- 3
A <- matrix(rep(NA, ra*ca), nrow = ra)
B <- matrix(rep(NA, rb*cb), nrow = rb)
k <- 1
for (i in 1:ra) {
for (j in 1:ca) {
A[i, j] <- k
k <- k + 1
}
}
A
for (i in 1:rb) {
for (j in 1:cb) {
B[i, j] <- (i-1)*cb+j
}
}
B
result <- .Fortran("mat_mul_for",
as.double(A),
as.double(B),
as.double(ra*cb),
as.integer(ra),
as.integer(ca),
as.integer(rb),
as.integer(cb),
as.integer(ra),
as.integer(cb)
)
result
dyn.load("mat_mul_for.so")
ra <- 2
ca <- 4
rb <- 4
cb <- 3
A <- matrix(rep(NA, ra*ca), nrow = ra)
B <- matrix(rep(NA, rb*cb), nrow = rb)
k <- 1
for (i in 1:ra) {
for (j in 1:ca) {
A[i, j] <- k
k <- k + 1
}
}
A
for (i in 1:rb) {
for (j in 1:cb) {
B[i, j] <- (i-1)*cb+j
}
}
B
result <- .Fortran("mat_mul_for",
as.double(A),
as.double(B),
as.double(ra*cb),
as.integer(ra),
as.integer(ca),
as.integer(rb),
as.integer(cb),
as.integer(ra),
as.integer(cb)
)
result
dyn.load("mat_mul_for.so")
ra <- 2
ca <- 4
rb <- 4
cb <- 3
A <- matrix(rep(NA, ra*ca), nrow = ra)
B <- matrix(rep(NA, rb*cb), nrow = rb)
k <- 1
for (i in 1:ra) {
for (j in 1:ca) {
A[i, j] <- k
k <- k + 1
}
}
A
for (i in 1:rb) {
for (j in 1:cb) {
B[i, j] <- (i-1)*cb+j
}
}
B
result <- .Fortran("mat_mul_for",
as.double(A),
as.double(B),
as.double(ra*cb),
as.integer(ra),
as.integer(ca),
as.integer(rb),
as.integer(cb),
as.integer(ra),
as.integer(cb)
)
result
dyn.load("mat_mul_for.so")
ra <- 2
ca <- 4
rb <- 4
cb <- 3
A <- matrix(rep(NA, ra*ca), nrow = ra)
B <- matrix(rep(NA, rb*cb), nrow = rb)
k <- 1
for (i in 1:ra) {
for (j in 1:ca) {
A[i, j] <- k
k <- k + 1
}
}
A
for (i in 1:rb) {
for (j in 1:cb) {
B[i, j] <- (i-1)*cb+j
}
}
B
result <- .Fortran("mat_mul_for",
as.double(A),
as.double(B),
as.double(ra*cb),
as.integer(ra),
as.integer(ca),
as.integer(rb),
as.integer(cb),
as.integer(ra),
as.integer(cb)
)
result
